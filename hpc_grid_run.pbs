#!/bin/bash
# Job script to run pbs job in job array
#=============================================
# set default resource requirements for job 
# - these can be overridden on the qsub command line
#
#PBS -l nodes=1:ppn=16
#PBS -l walltime=00:45:00
#PBS -t 1
#PBS -e data/run/job_output/pbs/error
#PBS -o data/run/job_output/pbs/output

# If this is run as a bash script, no PBS var will be set, so set vars
if [ -z "$PBS_ARRAYID" ]
then
    PBS_O_WORKDIR='.'
    PBS_ARRAYID=0
fi

#Change to directory from which job was submitted
cd $PBS_O_WORKDIR
#Set parameter as if run on SLURM rather than PBS
SLURM_ARRAY_TASK_ID=$PBS_ARRAYID

module load conda/4.4.0
source activate contact

#Get a specific parameter configuration based on the ARRAY_ID using the gridsearch.py script
gridentry=($(python lib/gridsearch.py --id $SLURM_ARRAY_TASK_ID))
#The entries are:
# taut (contact tracing rate); taur (random tracing / testing rate); 
# overlap (app uptake); pa (prob of being asymptomatic)
uptake=${gridentry[0]}
taut=${gridentry[1]}
taur=${gridentry[2]}
pa=${gridentry[3]}
overlap=${gridentry[4]}
dual=${gridentry[5]}

if [ $taut -eq 10 ]
then
    taut=(.05 .1 .2 .5)
fi

k=10

newfile="data/run/batch8_pbs/simresult_id"$SLURM_ARRAY_TASK_ID"_"$taut"_"$taur"_"$uptake"_"$k".json"

# Needed such that matplotlib does not produce error because XDG_RUNTIME_DIR not set
export MPLBACKEND=Agg

python run.py \
    --netsize 100 \
    --k $k \
    --p .2 \
    --nettype "powerlaw-cluster" \
    --multip 3 \
    --model "covid" \
    --dual $dual \
    --uptake $uptake \
    --overlap 1 \
    --maintain_overlap False \
    --overlap_two $overlap \
    --nnets 2 \
    --niters 2 \
    --separate_traced True \
    --avg_without_earlystop True \
    --trace_once False \
    --first_inf .1 \
    --earlystop_margin 0 \
    --rem_orphans True \
    --noncomp .001 \
    --noncomp_after 14 \
    --presample 100000 \
    --pa $pa \
    --taut ${taut[@]} \
    --delay_two 2. \
    --taur $taur \
    --sampling_type "min" \
    --netseed 31 \
    --seed 11 > $newfile 

# Remove running artefacts from sim results
sed -i -n '/args/,$p' $newfile